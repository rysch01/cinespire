{"version":3,"sources":["firebase.js","useInput.js","SignupForm.js","SigninForm.js","LogoutButton.js","Watchlist.js","WatchedList.js","MovieSearcher.js","MapContainer.js","LocalSearcher.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","useInput","startValue","useState","value","setValue","onChange","e","target","firebaseInstance","SignupForm","setCurrentUser","setColorTheme","email","password","signUp","a","preventDefault","auth","createUserWithEmailAndPassword","user","JSON","stringify","userID","currentUser","uid","firestore","collection","doc","set","theme","watched","watchlist","alert","message","className","onSubmit","placeholder","type","SigninForm","signin","signInWithEmailAndPassword","currentUserID","get","then","userData","data","LogoutButton","logoutFunction","signOut","console","log","onClick","Watchlist","setUpdatingWatchlistFlag","updatingWatchlistFlag","colorTheme","setSelectedMovie","setWatchlist","useEffect","useWatchlist","i","movieTitle","axios","url","method","selectedMovieMoreInfo","map","movie","Title","getMoreDetails","userwatchlist","filter","wlmovie","imdbID","update","id","Watched","setUpdatingWatchedFlag","updatingWatchedFlag","setWatched","useWatched","userwatched","CurrentCard","selectedMovie","currentReviewURL","setCurrentReviewURL","currentReviewSuggestedText","setCurrentReviewSuggestedText","addToWatchList","FieldValue","arrayUnion","alreadySeen","SearchReviews","parseInt","Year","params","query","search_result","results","link","suggested_link_text","src","Poster","alt","width","Actors","split","name","Director","Runtime","Rated","Genre","Plot","href","AutoCompleteSuggestions","autoCompleteResultsList","movieSearcherCurrentResults","setMovieSearcherCurrentResults","selectAutoComplete","mscr","MovieSearcher","search_query","undefined","movie_results","m","Type","unique","forEach","element","some","push","MapContainer","googleMapsApiKey","mapContainerStyle","height","display","position","zoom","center","lat","lng","LocalMovieShowings","local_movie","address","mapsGeo","formatted_address","officialUrl","title","shortDescription","showtimes","showtime","ticketURI","theatre","dateTime","getLatLong","LocalSearcherResults","localResults","tmsId","LocalSearcher","setLocalResults","localZip","setLocalZip","localRange","setLocalRange","zip","range","date","Date","today","getFullYear","getMonth","getDate","local_result","pattern","onInput","length","min","max","searchLocally","App","onAuthStateChanged","authUser","updateUser","WatchedList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95fec6b3.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n// Firebase Config from App Settings\r\nvar firebaseConfig = {\r\napiKey: \"AIzaSyCP-FvKLrkNtTxcSFtteLeo8b5EV9KYwjw\",\r\nauthDomain: \"cinespire-7ab7d.firebaseapp.com\",\r\nprojectId: \"cinespire-7ab7d\",\r\nstorageBucket: \"cinespire-7ab7d.appspot.com\",\r\nmessagingSenderId: \"519022354411\",\r\nappId: \"1:519022354411:web:5fbd66f07b14b2d44683ae\",\r\nmeasurementId: \"G-M0RDEZ4NVW\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// export const addMovie = (movie) => {\r\n//     const MovieReference = firebase.database().ref('')\r\n// }\r\n\r\n\r\nexport default firebase;","import {useState} from 'react'\r\n\r\nconst useInput = (startValue) => {\r\n    const [value, setValue] = useState(startValue);\r\n\r\n    const handleChange = (e)=>{\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    return {\r\n        value,\r\n        onChange: handleChange\r\n    }\r\n}\r\n\r\nexport default useInput","import react from 'react'\r\nimport useInput from './useInput'\r\nimport firebase from './firebase'\r\n\r\nlet firebaseInstance = firebase;\r\n\r\nconst SignupForm = ({setCurrentUser, setColorTheme}) => {\r\n    const email = useInput('');\r\n    const password = useInput('')\r\n\r\n    const signUp = async (e) => {\r\n        e.preventDefault();\r\n        try{\r\n            if(firebaseInstance) {\r\n                const user = await firebaseInstance.auth().createUserWithEmailAndPassword(email.value, password.value);\r\n                if(user){\r\n                    let email = JSON.stringify(user.user.email)\r\n                    let userID = firebase.auth().currentUser.uid;\r\n                    await firebase.firestore().collection('users').doc(userID).set({email: email, theme: 'light', watched: [], watchlist: []})\r\n                    setCurrentUser(userID);\r\n                    setColorTheme('light')\r\n\r\n                }\r\n            }\r\n        } catch (error) {\r\n            alert(error.message)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className = 'SignupCard'>\r\n            <div className='SignupHeader'><h3>Sign Up</h3></div>\r\n            <div className = 'SignupForm'>\r\n                <form onSubmit={signUp}>\r\n                    <input placeholder='email' {...email}></input>  \r\n                    <input type='password' placeholder='password' {...password}></input>\r\n                    <button type='submit'>Create Account</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SignupForm","import react from 'react'\r\nimport useInput from './useInput'\r\nimport firebase from './firebase'\r\n\r\nlet firebaseInstance = firebase;\r\n\r\nconst SigninForm = ({setCurrentUser, setColorTheme}) => {\r\n    const email = useInput('');\r\n    const password = useInput('')\r\n\r\n    const signin = async (e) => {\r\n        e.preventDefault();\r\n        try{\r\n            if(firebaseInstance) {\r\n                const user = await firebaseInstance.auth().signInWithEmailAndPassword(email.value, password.value)\r\n                \r\n                if(user){\r\n                    alert('Welcome back ' + user.user.email)\r\n                    setCurrentUser(user.user.email);\r\n                    let currentUserID = await firebase.auth().currentUser.uid;\r\n                    await firebase.firestore().collection('users').doc(currentUserID).get().then(async (doc)=>{\r\n                                  let userData = doc.data();\r\n                                  setColorTheme(userData.theme);\r\n                              }) \r\n\r\n                } else {\r\n                    alert('failed')\r\n                    setCurrentUser(null);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            alert(error.message)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className = 'SigninCard'>\r\n            <div className='SigninHeader'><h3>Sign In</h3></div>\r\n            <div className = 'SigninForm'>\r\n                <form onSubmit={signin}>\r\n                    <input placeholder='email' {...email}></input>  \r\n                    <input type='password' placeholder='password' {...password}></input><br></br>\r\n                    <button type='submit'>Sign In</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SigninForm","import react from 'react'\r\nimport firebase from './firebase'\r\n\r\nconst LogoutButton = ({setCurrentUser, setColorTheme}) => {\r\n    const logoutFunction = async () => {\r\n        try {\r\n                await firebase.auth().signOut();\r\n                setCurrentUser(null)  \r\n                alert('signed out')\r\n                setColorTheme('light')\r\n            } \r\n        catch(error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button className='LogoutButton' onClick = {()=>logoutFunction()}>Log Out</button>\r\n    )\r\n}\r\n\r\nexport default LogoutButton","import react from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport firebase from './firebase'\r\nimport axios from 'axios';\r\n\r\nfunction useWatchlist(setUpdatingWatchlistFlag, updatingWatchlistFlag) {\r\n    const [watchlist, setWatchlist] = useState([]);\r\n    useEffect(async ()=>{\r\n        let currentUserID = firebase.auth().currentUser.uid;\r\n        firebase.firestore().collection('users').doc(currentUserID).get().then((doc)=>{\r\n            let userData = doc.data();\r\n            setWatchlist(userData.watchlist);\r\n            setUpdatingWatchlistFlag(false)\r\n        })        \r\n    }, [updatingWatchlistFlag])\r\n\r\n    return watchlist\r\n}\r\n\r\nconst Watchlist = ({currentUser, setUpdatingWatchlistFlag, updatingWatchlistFlag, colorTheme, setSelectedMovie}) => {\r\n    const watchlist = useWatchlist(setUpdatingWatchlistFlag, updatingWatchlistFlag)\r\n    let i = 0;\r\n\r\n    async function getMoreDetails(movieTitle) {\r\n        let selectedMovieMoreInfo = await axios({\r\n            url:      `http://www.omdbapi.com/?&apikey=fb8a95d8&t=${movieTitle}&type=movie&plot=full`,\r\n            method:   'get',\r\n          })\r\n    \r\n        setSelectedMovie(selectedMovieMoreInfo.data);\r\n    }\r\n\r\n    return (\r\n        <div className={'Watchlist'+colorTheme}>\r\n            <h2>Watch List</h2>\r\n            <div>\r\n                {watchlist.map((movie)=> {\r\n                    \r\n                    // let keywl = Object.keys(watchlist).filter((kmovie)=>{return watchlist[kmovie].imdbID==movie.imdbID}).map((key)=>{\r\n                    //     alert(key)\r\n                    // })\r\n                    // console.log(keywl)\r\n                    return (\r\n                        <div key = {movie.id+'wl'+i++} className={'WatchlistEntry'+colorTheme}>\r\n                            <p>{(movie.Title)} </p>\r\n                            <div className={'WatchlistButtons'+colorTheme}>\r\n                                <button>Watched</button>\r\n                                <button onClick={()=>{\r\n                                    getMoreDetails(movie.Title)\r\n                                }}>More Details</button>\r\n                                <button onClick={async()=>{\r\n                                    let currentUserID = firebase.auth().currentUser.uid;\r\n                                    await firebase.firestore().collection('users').doc(currentUserID).get().then(async (doc)=>{\r\n                                        let userwatchlist = doc.data().watchlist.filter((wlmovie)=>wlmovie.imdbID!==movie.imdbID);\r\n                                        await firebase.firestore().collection('users').doc(currentUserID).update({'watchlist': userwatchlist})\r\n                                        setUpdatingWatchlistFlag(true)\r\n                                    \r\n                                    })     \r\n                                }}>Remove from List</button>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                    }      \r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Watchlist","import react from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport firebase from './firebase'\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nfunction useWatched(setUpdatingWatchedFlag, updatingWatchedFlag) {\r\n    const [watched, setWatched] = useState([]);\r\n    useEffect(async ()=>{\r\n        let currentUserID = firebase.auth().currentUser.uid;\r\n        firebase.firestore().collection('users').doc(currentUserID).get().then((doc)=>{\r\n            let userData = doc.data();\r\n            setWatched(userData.watched);\r\n            setUpdatingWatchedFlag(false)\r\n        })        \r\n    }, [updatingWatchedFlag])\r\n\r\n    return watched\r\n}\r\n\r\nconst Watched = ({currentUser, setUpdatingWatchedFlag, updatingWatchedFlag, colorTheme, setSelectedMovie}) => {\r\n    const watched = useWatched(setUpdatingWatchedFlag, updatingWatchedFlag)\r\n    let i = 0;\r\n\r\n    async function getMoreDetails(movieTitle) {\r\n        let selectedMovieMoreInfo = await axios({\r\n            url:      `http://www.omdbapi.com/?&apikey=fb8a95d8&t=${movieTitle}&type=movie&plot=full`,\r\n            method:   'get',\r\n          })\r\n    \r\n        setSelectedMovie(selectedMovieMoreInfo.data);\r\n    }\r\n\r\n    return (\r\n        <div className={'Watched'+colorTheme}>\r\n            <h2>Watched</h2>\r\n            <div>\r\n                {watched.map((movie)=> {\r\n                    return (\r\n                        <div key = {movie.id+'wd'+i++} className={'WatchedEntry'+colorTheme}>\r\n                            <p>{(movie.Title)} </p>\r\n                            <div className={'WatchedButtons'+colorTheme}>\r\n                                <button onClick={()=>{\r\n                                    getMoreDetails(movie.Title)\r\n                                }}>More Details</button>\r\n                                 <button onClick={async()=>{\r\n                                    let currentUserID = firebase.auth().currentUser.uid;\r\n                                    await firebase.firestore().collection('users').doc(currentUserID).get().then(async (doc)=>{\r\n                                        let userwatched = doc.data().watched.filter((wlmovie)=>wlmovie.imdbID!==movie.imdbID);\r\n                                        await firebase.firestore().collection('users').doc(currentUserID).update({'watched': userwatched})\r\n                                        setUpdatingWatchedFlag(true)\r\n                                    \r\n                                    })     \r\n                                }}>Remove from List</button>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                    }      \r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Watched","import './App.css';\r\n\r\nimport axios from 'axios';\r\nimport React, {useState} from 'react'\r\nimport firebase from './firebase'\r\nimport { doc, updateDoc, arrayUnion, arrayRemove } from \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nimport SearchReviews from './SearchReviews.js'\r\n\r\nfunction MovieSearcher({movieSearcherCurrentResults, setMovieSearcherCurrentResults, selectedMovie, setSelectedMovie, currentUser, setUpdatingWatchlistFlag, setUpdatingWatchedFlag, colorTheme}) {\r\n  return (\r\n    <div className={'MovieSearcher '+ colorTheme}>\r\n        <div className='SearchSide'>\r\n          <div className = 'SearchSection'>\r\n          <input type='text' placeholder='Search Movies By Title!' className='MovieSearchBar' onChange={ async (e)=>{\r\n                let search_query = e.target.value\r\n                let search_result = await axios({\r\n                  url:      `https://www.omdbapi.com/?&apikey=fb8a95d8&s=${search_query}&type=movie`,\r\n                  method:   'get',\r\n                })\r\n                \r\n                try{\r\n                  if(search_result.data['Search'] !== undefined) {\r\n                    let movie_results = search_result.data['Search'].filter(m=>m.Type ==='movie');\r\n                    let unique = [];\r\n                    movie_results.forEach((element)=>{\r\n                      if(!(unique.some(e => e.imdbID == element.imdbID))){\r\n                        unique.push(element);\r\n                      }\r\n                    })\r\n\r\n                    await setMovieSearcherCurrentResults(unique)\r\n                  }\r\n                } catch {\r\n                  await setMovieSearcherCurrentResults([])\r\n                }\r\n              \r\n              }\r\n            }>\r\n          </input>\r\n          <AutoCompleteSuggestions movieSearcherCurrentResults={movieSearcherCurrentResults} setMovieSearcherCurrentResults={setMovieSearcherCurrentResults} selectedMovie={selectedMovie} setSelectedMovie={setSelectedMovie}/>\r\n          </div>\r\n        </div>\r\n        <CurrentCard selectedMovie={selectedMovie} setSelectedMovie={setSelectedMovie} setUpdatingWatchlistFlag={setUpdatingWatchlistFlag} setUpdatingWatchedFlag={setUpdatingWatchedFlag} colorTheme={colorTheme} currentUser={currentUser}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction CurrentCard({selectedMovie, setSelectedMovie, setUpdatingWatchlistFlag, setUpdatingWatchedFlag, colorTheme, currentUser}) {\r\n  const [currentReviewURL, setCurrentReviewURL] = useState('');\r\n  const [currentReviewSuggestedText, setCurrentReviewSuggestedText] = useState('');\r\n\r\n  const addToWatchList = async (movie) => {\r\n    let currentUserID = firebase.auth().currentUser.uid;\r\n  \r\n    await firebase.firestore().collection('users').doc(currentUserID).update({\r\n      watchlist: firebase.firestore.FieldValue.arrayUnion(movie)\r\n    }) \r\n    setUpdatingWatchlistFlag(true);\r\n\r\n  }\r\n\r\n  const alreadySeen = async (movie) => {\r\n    let currentUserID = firebase.auth().currentUser.uid;\r\n  \r\n    await firebase.firestore().collection('users').doc(currentUserID).update({\r\n      watched: firebase.firestore.FieldValue.arrayUnion(movie)\r\n    }) \r\n    setUpdatingWatchedFlag(true)\r\n  }\r\n\r\n  if(selectedMovie !==''){\r\n\r\n\r\n    async function SearchReviews() {\r\n      try {\r\n          let search_result = await axios({\r\n            url:      `https://api.nytimes.com/svc/movies/v2/reviews/search.json?opening-date=${parseInt(selectedMovie.Year)}-01-01:${parseInt(selectedMovie.Year)+1}-01-01&api-key=eiol1fy9uW3jyANb4ZtUlai96rau5OGb`,\r\n            method:   'get',\r\n            params: {\r\n              query: ' '+selectedMovie.Title+' ',\r\n            }\r\n          })\r\n          setCurrentReviewURL(search_result.data.results[0].link.url)\r\n          setCurrentReviewSuggestedText('Suggested NYTimes Review ' + JSON.stringify(search_result.data.results[0].link.suggested_link_text))\r\n\r\n          // return (\r\n          //   <div>\r\n          //     <a href={search_result.data.results[0].link.url}>Suggested NYTimes Article</a>\r\n          //   </div>\r\n          \r\n      } catch {\r\n          setCurrentReviewURL('')\r\n          setCurrentReviewSuggestedText('No Suggested Articles Available')\r\n        // return (\r\n        //   <div>\r\n        //     <p>No Article Retrived</p>\r\n        //   </div>\r\n        // )\r\n      }\r\n      // alert(currentReviewURL)\r\n\r\n    }\r\n\r\n\r\n    // async function searchScript() {\r\n    //   try {\r\n    //     let search_result = await axios({\r\n    //       url:      `https://www.stands4.com/services/v2/scripts.php`,\r\n    //       method:   'get',\r\n    //       params: {\r\n    //         uid: '8828',\r\n    //         tokenid:'7knlRdh7DMg62erC',\r\n    //         term: selectedMovie.Title,\r\n    //         format: 'json',\r\n    //       }\r\n    //     }).data\r\n    //     alert(JSON.stringify(search_result))\r\n\r\n    //   } catch {\r\n    //     alert()\r\n    //   }\r\n    // }\r\n    // searchScript()\r\n    \r\n\r\n\r\n\r\n    \r\n    let i = 0;\r\n    return (\r\n      <div className={'CurrentCard'+colorTheme}>\r\n        <div className={'CardBar'+colorTheme}>\r\n          <div className={'ImmediateInfoOuter'+colorTheme}>\r\n            <div className=\"ImmediateInfo\">\r\n              <img className='Image' src={selectedMovie.Poster} alt = {'Poster for ' + selectedMovie} width={160}></img>\r\n              <div className={'Details'+colorTheme}>\r\n                <p className='Title'>{selectedMovie.Title}</p>\r\n                <p className='Year'>({selectedMovie.Year})</p>\r\n                <p>Starring:</p> \r\n                <div>\r\n                  {selectedMovie.Actors.split(\",\").map(name=><p key={i++} className='Name'>{name}</p>)}\r\n                </div>\r\n                <p className='Name'>Directed by {selectedMovie.Director}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={'MoreDetails'+colorTheme}>\r\n          <div className='Logistics'>\r\n            <div className='LogisticsData'>\r\n              <h3>Runtime</h3>\r\n              <p>{selectedMovie.Runtime}</p>\r\n            </div>\r\n            <div className='LogisticsData'>\r\n              <h3>Rated</h3>\r\n              <p>{selectedMovie.Rated}</p>\r\n            </div>\r\n            <div className='LogisticsData'>\r\n              <h3>Genre</h3>\r\n              <p>{selectedMovie.Genre}</p>\r\n            </div>\r\n          </div>\r\n          <div className='Synopsis'>\r\n            <h3>Synopsis</h3>\r\n            <p>{selectedMovie.Plot}</p>\r\n          </div>\r\n          <button onClick={()=>{SearchReviews()}}>Search for NYTimes Review\r\n            {/* <SearchReviews currentReviewURL={currentReviewURL}/> */}\r\n          </button>\r\n          <a href={currentReviewURL}>{currentReviewSuggestedText}</a>\r\n          <button className='BacklogButton' onClick={()=>{addToWatchList(selectedMovie)}}>Add to WatchList!</button>\r\n          <button className='WatchedButton' onClick={()=>{alreadySeen(selectedMovie)}}>Already Seen It!</button>\r\n          <button className='Hide' onClick={()=>{setSelectedMovie('')}}>Hide</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className={'SearchPromptDiv'+colorTheme}><div className='Center'>Search to get Started!</div></div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction AutoCompleteSuggestions({movieSearcherCurrentResults, setMovieSearcherCurrentResults, selectedMovie, setSelectedMovie}) {\r\n  \r\n    let autoCompleteResultsList;\r\n    if(movieSearcherCurrentResults === '') {\r\n      autoCompleteResultsList = (\r\n        <p>No Results Yet!</p>\r\n      )\r\n    } else {\r\n      async function selectAutoComplete(movie) {\r\n        let selectedMovieMoreInfo = await axios({\r\n            url:      `https://www.omdbapi.com/?&apikey=fb8a95d8&t=${movie.Title}&type=movie&plot=full`,\r\n            method:   'get',\r\n          })\r\n\r\n        setSelectedMovie(selectedMovieMoreInfo.data);\r\n        setMovieSearcherCurrentResults([]);\r\n      }\r\n      \r\n      autoCompleteResultsList = (\r\n        <div className='AutoCompleteSuggestions'>\r\n          {movieSearcherCurrentResults.map(mscr => <button className=\"AutoCompleteResult\" key={mscr.imdbID} onClick={()=>{selectAutoComplete(mscr)}}>{mscr.Title} - ({mscr.Year})</button>)}\r\n        </div>\r\n      ) \r\n    }\r\n  \r\n    return autoCompleteResultsList\r\n}\r\n\r\nexport default MovieSearcher;\r\n","import React from 'react';\r\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\r\n\r\nconst MapContainer = ()=>{\r\n    const defaultCenter = {\r\n        lat: 40.0000,\r\n        lng: 2.0000,\r\n    }\r\n\r\n    const mapStyles = {        \r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: 'inline-block',\r\n        position: 'relavtive'\r\n    };\r\n        \r\n\r\n    return (\r\n        <LoadScript googleMapsApiKey='AIzaSyAkB7B1ttQoSCSN3fKnhamljAxxaO49i4I'>\r\n            <GoogleMap mapContainerStyle={mapStyles}\r\n            zoom={10}\r\n            center={defaultCenter}/>\r\n        </LoadScript>\r\n    )\r\n}\r\n\r\nexport default MapContainer;","import './App.css';\r\nimport axios from 'axios';\r\nimport React, {useState} from 'react'\r\nimport MapContainer from './MapContainer.js'\r\n\r\nfunction LocalSearcher({setSelectedMovie, colorTheme}) {\r\n    const [localResults, setLocalResults] = useState('');\r\n    const [localZip, setLocalZip] = useState('');\r\n    const [localRange, setLocalRange] = useState('');\r\n\r\n    async function searchLocally({zip, range}) {\r\n        let key = 'dvv6x2m364c35wsxqx595a3p';\r\n        let date = new Date();\r\n        let today = date.getFullYear() + '-' + (date.getMonth()+1) + '-' + date.getDate()\r\n\r\n        let local_result = await axios({\r\n            url: `https://data.tmsapi.com/v1.1/movies/showings?startDate=${today}&zip=${localZip}&radius=${localRange}&api_key=dvv6x2m364c35wsxqx595a3p`\r\n        });\r\n\r\n        await setLocalResults(local_result.data);\r\n        console.log(localResults)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className={'LocalExterior'+colorTheme}>\r\n\r\n        <div className ={'LocalSearcher'+colorTheme}>\r\n\r\n            <div className={'LocalSearcherConsole'+colorTheme}>\r\n                <p>Local Searcher</p>\r\n                    <input type=\"text\" pattern={\"[0-9]{5}\"} placeholder='Enter Zip' onInput={ async (e)=>{\r\n                        let zip = e.target.value\r\n                        if(zip.length === 5){\r\n                            setLocalZip(zip);\r\n                        }\r\n\r\n                    }}></input>\r\n\r\n                    <input type=\"number\" min={5} max={100} placeholder={'Enter Range'} onInput={ async (e)=>{\r\n                        let range = e.target.value\r\n                        setLocalRange(range);\r\n                        \r\n                    }}></input>\r\n\r\n                <button onClick={(e)=>{searchLocally(localZip, localRange)}}>Search</button>\r\n            </div>\r\n            \r\n        <LocalSearcherResults localResults={localResults} setSelectedMovie={setSelectedMovie} colorTheme={colorTheme}/>\r\n        </div>\r\n        <MapContainer/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction LocalMovieShowings({local_movie, setSelectedMovie, colorTheme}) {\r\n    async function getMoreDetails(movieTitle) {\r\n        let selectedMovieMoreInfo = await axios({\r\n            url:      `https://www.omdbapi.com/?&apikey=fb8a95d8&t=${movieTitle}&type=movie&plot=full`,\r\n            method:   'get',\r\n          })\r\n    \r\n        setSelectedMovie(selectedMovieMoreInfo.data);\r\n\r\n        \r\n      \r\n    }\r\n\r\n    \r\n    async function getLatLong() {\r\n        let mapsGeo = await axios({\r\n            url:      `https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyAkB7B1ttQoSCSN3fKnhamljAxxaO49i4I`,\r\n            method:   'get',\r\n            params: {\r\n                address: 'Regal Belltower Stadium 20,33912'\r\n            }\r\n          })\r\n          alert(JSON.stringify(mapsGeo.data.results[0].formatted_address))\r\n      \r\n    }\r\n    \r\n    let local_showings = (\r\n        \r\n        <div className={'LocalMovie'+colorTheme}>\r\n            <a href={local_movie.officialUrl} className={'LocalTitle'+colorTheme}>{local_movie.title}</a>\r\n            <p>{local_movie.shortDescription}</p>\r\n            <select>\r\n                {local_movie.showtimes.map(showtime => <option className='MovieShowing' href={showtime.ticketURI} key={showtime.ticketURI+showtime.theatre.id+showtime.dateTime}>{showtime.theatre.name} at {showtime.dateTime}</option>)}\r\n            </select>\r\n            <button onClick={()=>alert('redirect here')}>Purchase Tickets</button>\r\n            <button onClick={()=>getLatLong()}>Purchase Tickets</button>\r\n\r\n            <button onClick={()=>getMoreDetails(local_movie.title)}>View More Movie Details</button>\r\n        </div>\r\n    )\r\n\r\n    return local_showings\r\n     // window.href\r\n     // use a form and submit for the button\r\n     // limit nytimes query to within a month of release date\r\n     // remove watched button from the watchlist functionality\r\n\r\n     // one more api\r\n     // submit\r\n}\r\n\r\nfunction LocalSearcherResults({localResults, setSelectedMovie, colorTheme}) {\r\n  \r\n    let localSearcherResultsList;\r\n    if(localResults === '') {\r\n        localSearcherResultsList = (\r\n        <p>No Results Yet!</p>\r\n      )\r\n    } else {\r\n\r\n\r\n        \r\n        localSearcherResultsList = (\r\n        <div>\r\n          {localResults.map(local_movie => <div className={\"LocalSearcherMovie\"+colorTheme} key={local_movie.tmsId}>\r\n                <LocalMovieShowings local_movie={local_movie} setSelectedMovie={setSelectedMovie} colorTheme={colorTheme}/>\r\n          </div>)}\r\n        </div>\r\n      ) \r\n    }\r\n  \r\n    return localSearcherResultsList\r\n}\r\n\r\nexport default LocalSearcher;","import './App.css';\nimport { useState, useEffect } from 'react';\n\nimport firebase from \"./firebase\"\n\nimport SignupForm from './SignupForm'\nimport SigninForm from './SigninForm'\nimport LogoutButton from './LogoutButton'\n\nimport Watchlist from './Watchlist'\nimport WatchedList from './WatchedList'\n\nimport MovieSearcher from './MovieSearcher.js'\nimport LocalSearcher from './LocalSearcher.js'\n\n\n\n// Make a useContext hook (figure it out) to keep the firebase in one file and the currentUser being global\n// Omdb api                                           20pts\n// tms api                                            20pts\n// backend with user accounts and login for firebase  15pts\n// autocomplete                                       10\n// custom color theming tied to the user              5\n// Frontend in a javascript absed framework - react   10\n// Times API                                          5\n// Total so far                                       85\n\n// Need to fix dropdown as a link\n// Need 1 more APIs or 2 OAuths\n// Watched on watchlist\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [movieSearcherCurrentResults, setMovieSearcherCurrentResults] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState('');\n  const [updatingWatchlistFlag, setUpdatingWatchlistFlag] = useState(false);\n  const [updatingWatchedFlag, setUpdatingWatchedFlag] = useState(false);\n  const [colorTheme, setColorTheme] = useState('light');\n\n  const updateUser = function(authUser) {\n    if(authUser) {\n      setCurrentUser(authUser.uid)\n      setSelectedMovie('')\n    } else {\n      setCurrentUser(null)\n    }\n  }\n\n\n  useEffect(()=>{\n    if (firebase) {\n      firebase.auth().onAuthStateChanged((authUser)=>{updateUser(authUser)})\n     }\n  }, [])\n\n  if(firebase.auth().currentUser) {\n    return (\n      \n      <div className={'App'}>\n\n        <header className={'AppHeader'}>\n          <h1>CineSpire</h1>\n          <button className='ThemePicker' onClick={\n            async ()=>{\n              if(colorTheme == 'light'){\n                setColorTheme('dark')\n                await firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).update({theme: 'dark'});\n\n              } else {\n                setColorTheme('light')\n                await firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).update({theme: 'light'});\n\n              }\n            } \n       }>{colorTheme}</button>\n\n        <LogoutButton setCurrentUser={setCurrentUser} setColorTheme={setColorTheme}/>\n          \n        </header>\n        <MovieSearcher movieSearcherCurrentResults={movieSearcherCurrentResults} setMovieSearcherCurrentResults={setMovieSearcherCurrentResults} selectedMovie={selectedMovie} setSelectedMovie={setSelectedMovie} currentUser={currentUser} setUpdatingWatchlistFlag={setUpdatingWatchlistFlag} setUpdatingWatchedFlag={setUpdatingWatchedFlag} colorTheme={colorTheme}/>\n        <div className={'Lists'+colorTheme}>\n          <Watchlist currentUser={currentUser} setUpdatingWatchlistFlag={setUpdatingWatchlistFlag} updatingWatchlistFlag={updatingWatchlistFlag} colorTheme={colorTheme} setSelectedMovie={setSelectedMovie}/>\n          <WatchedList currentUser={currentUser} setUpdatingWatchedFlag={setUpdatingWatchedFlag} updatingWatchedFlag={updatingWatchedFlag} colorTheme={colorTheme} setSelectedMovie={setSelectedMovie}/>\n        </div>\n          <LocalSearcher setSelectedMovie={setSelectedMovie} colorTheme={colorTheme}/>\n\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <p>Logged Out</p>\n        <button >{colorTheme}</button>\n \n        <SignupForm setCurrentUser={setCurrentUser} setColorTheme={setColorTheme}/>\n        <SigninForm setCurrentUser={setCurrentUser} setColorTheme={setColorTheme}/>\n      </div>\n    )\n  }\n  \n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}