{"version":3,"sources":["firebase.js","useInput.js","SignupForm.js","SigninForm.js","LogoutButton.js","Watchlist.js","WatchedList.js","MovieSearcher.js","MapContainer.js","LocalSearcher.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","useInput","startValue","useState","value","setValue","onChange","e","target","firebaseInstance","SignupForm","setCurrentUser","setColorTheme","setPageOpen","setmsOpen","setmlOpen","setlsOpen","email","password","signUp","a","preventDefault","auth","createUserWithEmailAndPassword","user","JSON","stringify","userID","currentUser","uid","firestore","collection","doc","set","theme","watched","watchlist","alert","message","className","onSubmit","placeholder","type","SigninForm","signin","signInWithEmailAndPassword","currentUserID","get","then","userData","data","LogoutButton","logoutFunction","signOut","onClick","Watchlist","setUpdatingWatchlistFlag","updatingWatchlistFlag","colorTheme","setSelectedMovie","setWatchlist","useEffect","useWatchlist","i","movieTitle","axios","url","method","selectedMovieMoreInfo","map","movie","Title","getMoreDetails","userwatchlist","filter","wlmovie","imdbID","update","id","Watched","setUpdatingWatchedFlag","updatingWatchedFlag","setWatched","useWatched","userwatched","CurrentCard","selectedMovie","currentReviewURL","currentReviewSuggestedText","setCurrentReviewURL","setCurrentReviewSuggestedText","addToWatchList","FieldValue","arrayUnion","alreadySeen","SearchReviews","day","monthNumPrior","monthNum","yearPrior","parseInt","Year","year","month","Released","substring","priorDate","laterDate","params","query","search_result","results","link","suggested_link_text","src","Poster","alt","width","Actors","split","name","Director","Runtime","Rated","Genre","Plot","href","AutoCompleteSuggestions","autoCompleteResultsList","movieSearcherCurrentResults","setMovieSearcherCurrentResults","selectAutoComplete","mscr","MovieSearcher","search_query","undefined","movie_results","m","Type","unique","forEach","element","some","push","MapContainer","latLong","defaultCenter","setLatLong","googleMapsApiKey","mapContainerStyle","height","display","position","zoom","center","LocalSearcherResults","localResults","theaterZip","setTheaterZip","localZip","setFormattedAddress","local_movie","LocalMovieShowings","tmsId","tz","address","mapsGeo","formatted_address","geometry","location","currentURL","setCurrentURL","officialUrl","title","shortDescription","index","nativeEvent","selectedIndex","setTimeout","dataset","disabled","selected","showtimes","showtime","data-url","ticketURI","data-location","theatre","dateTime","window","open","length","getLatLong","LocalSearcher","setLocalResults","setLocalZip","localRange","setLocalRange","zip","range","date","Date","today","getFullYear","getMonth","getDate","local_result","pattern","onInput","min","max","searchLocally","MainSection","pageOpen","WatchedList","App","msOpen","mlOpen","lsOpen","onAuthStateChanged","authUser","updateUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.174da588.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n// Firebase Config from App Settings\r\nvar firebaseConfig = {\r\napiKey: \"AIzaSyCP-FvKLrkNtTxcSFtteLeo8b5EV9KYwjw\",\r\nauthDomain: \"cinespire-7ab7d.firebaseapp.com\",\r\nprojectId: \"cinespire-7ab7d\",\r\nstorageBucket: \"cinespire-7ab7d.appspot.com\",\r\nmessagingSenderId: \"519022354411\",\r\nappId: \"1:519022354411:web:5fbd66f07b14b2d44683ae\",\r\nmeasurementId: \"G-M0RDEZ4NVW\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// export const addMovie = (movie) => {\r\n//     const MovieReference = firebase.database().ref('')\r\n// }\r\n\r\n\r\nexport default firebase;","import {useState} from 'react'\r\n\r\nconst useInput = (startValue) => {\r\n    const [value, setValue] = useState(startValue);\r\n\r\n    const handleChange = (e)=>{\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    return {\r\n        value,\r\n        onChange: handleChange\r\n    }\r\n}\r\n\r\nexport default useInput","import react from 'react'\r\nimport useInput from './useInput'\r\nimport firebase from './firebase'\r\n\r\nlet firebaseInstance = firebase;\r\n\r\nconst SignupForm = ({setCurrentUser, setColorTheme, setPageOpen, setmsOpen, setmlOpen, setlsOpen}) => {\r\n    const email = useInput('');\r\n    const password = useInput('')\r\n\r\n    const signUp = async (e) => {\r\n        e.preventDefault();\r\n        try{\r\n            if(firebaseInstance) {\r\n                const user = await firebaseInstance.auth().createUserWithEmailAndPassword(email.value, password.value);\r\n                if(user){\r\n                    let email = JSON.stringify(user.user.email)\r\n                    let userID = firebase.auth().currentUser.uid;\r\n                    await firebase.firestore().collection('users').doc(userID).set({email: email, theme: 'light', watched: [], watchlist: []})\r\n                    setCurrentUser(userID);\r\n                    setColorTheme('light')\r\n                    setPageOpen('ms')\r\n                    setmsOpen(true);\r\n                    setmlOpen(false);\r\n                    setlsOpen(false);\r\n\r\n                }\r\n            }\r\n        } catch (error) {\r\n            alert(error.message)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className = 'SignupCard'>\r\n            <div className='SignupHeader'><h3>Sign Up</h3></div>\r\n            <div className = 'SignupForm'>\r\n                <form onSubmit={signUp}>\r\n                    <input placeholder='email' {...email}></input>  \r\n                    <input type='password' placeholder='password' {...password}></input>\r\n                    <button type='submit'>Create Account</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SignupForm","import react from 'react'\r\nimport useInput from './useInput'\r\nimport firebase from './firebase'\r\n\r\nlet firebaseInstance = firebase;\r\n\r\nconst SigninForm = ({setCurrentUser, setColorTheme, setPageOpen, setmsOpen, setmlOpen, setlsOpen}) => {\r\n    const email = useInput('');\r\n    const password = useInput('')\r\n\r\n    const signin = async (e) => {\r\n        e.preventDefault();\r\n        try{\r\n            if(firebaseInstance) {\r\n                const user = await firebaseInstance.auth().signInWithEmailAndPassword(email.value, password.value)\r\n                \r\n                if(user){\r\n                    alert('Welcome back ' + user.user.email)\r\n                    setCurrentUser(user.user.email);\r\n                    let currentUserID = await firebase.auth().currentUser.uid;\r\n                    await firebase.firestore().collection('users').doc(currentUserID).get().then(async (doc)=>{\r\n                                  let userData = doc.data();\r\n                                  setColorTheme(userData.theme);\r\n                                  setPageOpen('ms')\r\n                                  setmsOpen(true);\r\n                                  setmlOpen(false);\r\n                                  setlsOpen(false);\r\n                              }) \r\n\r\n                } else {\r\n                    setCurrentUser(null);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            alert(error.message)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className = 'SigninCard'>\r\n            <div className='SigninHeader'><h3>Sign In</h3></div>\r\n            <div className = 'SigninForm'>\r\n                <form onSubmit={signin}>\r\n                    <input placeholder='email' {...email}></input>  \r\n                    <input type='password' placeholder='password' {...password}></input><br></br>\r\n                    <button type='submit'>Sign In</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SigninForm","import react from 'react'\r\nimport firebase from './firebase'\r\n\r\nconst LogoutButton = ({setCurrentUser, setColorTheme}) => {\r\n    const logoutFunction = async () => {\r\n        try {\r\n                await firebase.auth().signOut();\r\n                setCurrentUser(null)  \r\n                alert('signed out')\r\n                setColorTheme('light')\r\n            } \r\n        catch(error) {\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button className='LogoutButton' onClick = {()=>logoutFunction()}>Log Out</button>\r\n    )\r\n}\r\n\r\nexport default LogoutButton","import react from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport firebase from './firebase'\r\nimport axios from 'axios';\r\n\r\nfunction useWatchlist(setUpdatingWatchlistFlag, updatingWatchlistFlag) {\r\n    const [watchlist, setWatchlist] = useState([]);\r\n    useEffect(async ()=>{\r\n        let currentUserID = firebase.auth().currentUser.uid;\r\n        firebase.firestore().collection('users').doc(currentUserID).get().then((doc)=>{\r\n            let userData = doc.data();\r\n            setWatchlist(userData.watchlist);\r\n            setUpdatingWatchlistFlag(false)\r\n        })        \r\n    }, [updatingWatchlistFlag])\r\n\r\n    return watchlist\r\n}\r\n\r\nconst Watchlist = ({currentUser, setUpdatingWatchlistFlag, updatingWatchlistFlag, colorTheme, setSelectedMovie, setPageOpen, setmsOpen, setmlOpen, setlsOpen}) => {\r\n    const watchlist = useWatchlist(setUpdatingWatchlistFlag, updatingWatchlistFlag)\r\n    let i = 0;\r\n\r\n    async function getMoreDetails(movieTitle) {\r\n        let selectedMovieMoreInfo = await axios({\r\n            url:      `https://www.omdbapi.com/?&apikey=fb8a95d8&t=${movieTitle}&type=movie&plot=full`,\r\n            method:   'get',\r\n          })\r\n    \r\n        setSelectedMovie(selectedMovieMoreInfo.data);\r\n    }\r\n\r\n    return (\r\n        <div className={'Watchlist'+colorTheme}>\r\n            <h2>Watch List</h2>\r\n            <div>\r\n                {watchlist.map((movie)=> {\r\n                  \r\n                    return (\r\n                        <div key = {movie.id+'wl'+i++} className={'WatchlistEntry'+colorTheme}>\r\n                            <p>{(movie.Title)} </p>\r\n                            <div className={'WatchlistButtons'+colorTheme}>\r\n                                <button onClick={()=>{\r\n                                    getMoreDetails(movie.Title);\r\n                                    setPageOpen('ms'); setmsOpen(true); setmlOpen(false); setlsOpen(false);\r\n                                }}>More Details</button>\r\n                                <button onClick={async()=>{\r\n                                    let currentUserID = firebase.auth().currentUser.uid;\r\n                                    await firebase.firestore().collection('users').doc(currentUserID).get().then(async (doc)=>{\r\n                                        let userwatchlist = doc.data().watchlist.filter((wlmovie)=>wlmovie.imdbID!==movie.imdbID);\r\n                                        await firebase.firestore().collection('users').doc(currentUserID).update({'watchlist': userwatchlist})\r\n                                        setUpdatingWatchlistFlag(true)\r\n                                    \r\n                                    })     \r\n                                }}>Remove from List</button>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                    }      \r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Watchlist","import react from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport firebase from './firebase'\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nfunction useWatched(setUpdatingWatchedFlag, updatingWatchedFlag) {\r\n    const [watched, setWatched] = useState([]);\r\n    useEffect(async ()=>{\r\n        let currentUserID = firebase.auth().currentUser.uid;\r\n        firebase.firestore().collection('users').doc(currentUserID).get().then((doc)=>{\r\n            let userData = doc.data();\r\n            setWatched(userData.watched);\r\n            setUpdatingWatchedFlag(false)\r\n        })        \r\n    }, [updatingWatchedFlag])\r\n\r\n    return watched\r\n}\r\n\r\nconst Watched = ({currentUser, setUpdatingWatchedFlag, updatingWatchedFlag, colorTheme, setSelectedMovie, setPageOpen, setmsOpen, setmlOpen, setlsOpen}) => {\r\n    const watched = useWatched(setUpdatingWatchedFlag, updatingWatchedFlag)\r\n    let i = 0;\r\n\r\n    async function getMoreDetails(movieTitle) {\r\n        let selectedMovieMoreInfo = await axios({\r\n            url:      `https://www.omdbapi.com/?&apikey=fb8a95d8&t=${movieTitle}&type=movie&plot=full`,\r\n            method:   'get',\r\n          })\r\n    \r\n        setSelectedMovie(selectedMovieMoreInfo.data);\r\n    }\r\n\r\n    return (\r\n        <div className={'Watched'+colorTheme}>\r\n            <h2>Watched</h2>\r\n            <div>\r\n                {watched.map((movie)=> {\r\n                    return (\r\n                        <div key = {movie.id+'wd'+i++} className={'WatchedEntry'+colorTheme}>\r\n                            <p>{(movie.Title)} </p>\r\n                            <div className={'WatchedButtons'+colorTheme}>\r\n                                <button onClick={()=>{\r\n                                    getMoreDetails(movie.Title)\r\n                                    setPageOpen('ms'); setmsOpen(true); setmlOpen(false); setlsOpen(false)\r\n                                }}>More Details</button>\r\n                                 <button onClick={async()=>{\r\n                                    let currentUserID = firebase.auth().currentUser.uid;\r\n                                    await firebase.firestore().collection('users').doc(currentUserID).get().then(async (doc)=>{\r\n                                        let userwatched = doc.data().watched.filter((wlmovie)=>wlmovie.imdbID!==movie.imdbID);\r\n                                        await firebase.firestore().collection('users').doc(currentUserID).update({'watched': userwatched})\r\n                                        setUpdatingWatchedFlag(true)\r\n                                        \r\n                                    })     \r\n                                }}>Remove from List</button>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                    }      \r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Watched","import './App.css';\r\n\r\nimport axios from 'axios';\r\nimport React, {useState} from 'react'\r\nimport firebase from './firebase'\r\nimport { doc, updateDoc, arrayUnion, arrayRemove } from \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nimport SearchReviews from './SearchReviews.js'\r\n\r\nfunction MovieSearcher({movieSearcherCurrentResults, setMovieSearcherCurrentResults, selectedMovie, setSelectedMovie, currentUser, setUpdatingWatchlistFlag, setUpdatingWatchedFlag, colorTheme}) {\r\n  const [currentReviewURL, setCurrentReviewURL] = useState('');\r\n  const [currentReviewSuggestedText, setCurrentReviewSuggestedText] = useState('');\r\n  return (\r\n    <div className={'MovieSearcher'}>\r\n        <div className='SearchSide'>\r\n          <div className = 'SearchSection'>\r\n          <input type='text' placeholder='Search Movies By Title!' className='MovieSearchBar' onChange={ async (e)=>{\r\n                let search_query = e.target.value\r\n                let search_result = await axios({\r\n                  url:      `https://www.omdbapi.com/?&apikey=fb8a95d8&s=${search_query}&type=movie`,\r\n                  method:   'get',\r\n                })\r\n                \r\n                try{\r\n                  if(search_result.data['Search'] !== undefined) {\r\n                    let movie_results = search_result.data['Search'].filter(m=>m.Type ==='movie');\r\n                    let unique = [];\r\n                    movie_results.forEach((element)=>{\r\n                      if(!(unique.some(e => e.imdbID == element.imdbID))){\r\n                        unique.push(element);\r\n                      }\r\n                    })\r\n\r\n                    await setMovieSearcherCurrentResults(unique)\r\n                  }\r\n                } catch {\r\n                  await setMovieSearcherCurrentResults([])\r\n                }\r\n              \r\n              }\r\n            }>\r\n          </input>\r\n          <AutoCompleteSuggestions movieSearcherCurrentResults={movieSearcherCurrentResults} setMovieSearcherCurrentResults={setMovieSearcherCurrentResults} selectedMovie={selectedMovie} setSelectedMovie={setSelectedMovie} setCurrentReviewURL={setCurrentReviewURL} setCurrentReviewSuggestedText={setCurrentReviewSuggestedText}/>\r\n          </div>\r\n        </div>\r\n        <CurrentCard selectedMovie={selectedMovie} setSelectedMovie={setSelectedMovie} setUpdatingWatchlistFlag={setUpdatingWatchlistFlag} setUpdatingWatchedFlag={setUpdatingWatchedFlag} colorTheme={colorTheme} currentUser={currentUser} currentReviewURL={currentReviewURL} currentReviewSuggestedText={currentReviewSuggestedText} setCurrentReviewURL={setCurrentReviewURL} setCurrentReviewSuggestedText={setCurrentReviewSuggestedText}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction CurrentCard({selectedMovie, setSelectedMovie, setUpdatingWatchlistFlag, setUpdatingWatchedFlag, colorTheme, currentUser, currentReviewURL, currentReviewSuggestedText, setCurrentReviewURL, setCurrentReviewSuggestedText}) {\r\n \r\n\r\n  const addToWatchList = async (movie) => {\r\n    let currentUserID = firebase.auth().currentUser.uid;\r\n  \r\n    await firebase.firestore().collection('users').doc(currentUserID).update({\r\n      watchlist: firebase.firestore.FieldValue.arrayUnion(movie)\r\n    }) \r\n    setUpdatingWatchlistFlag(true);\r\n\r\n  }\r\n\r\n  const alreadySeen = async (movie) => {\r\n    let currentUserID = firebase.auth().currentUser.uid;\r\n  \r\n    await firebase.firestore().collection('users').doc(currentUserID).update({\r\n      watched: firebase.firestore.FieldValue.arrayUnion(movie)\r\n    }) \r\n    setUpdatingWatchedFlag(true)\r\n  }\r\n\r\n  if(selectedMovie !==''){\r\n\r\n\r\n    async function SearchReviews() {\r\n      let day = '01';\r\n      let monthNumPrior = '01';   //Lower Search\r\n      let monthNum = '01';        //Upper search bound\r\n      let yearPrior = parseInt(selectedMovie.Year);\r\n      let year = parseInt(selectedMovie.Year);\r\n\r\n\r\n      let month = selectedMovie.Released.substring(3, 6);\r\n\r\n      if(month == 'Jan') {\r\n        monthNum = '2';\r\n        monthNumPrior='12'\r\n        day = (selectedMovie.Released.substring(0,2));\r\n        yearPrior = parseInt(year)-1;\r\n     } else if(month == 'Feb') {\r\n        monthNum = '03';\r\n        monthNumPrior='01'\r\n        day = (selectedMovie.Released.substring(0,2));\r\n      } else if(month == 'Mar') {\r\n        monthNum = '04';\r\n        monthNumPrior = '02'\r\n        day = (selectedMovie.Released.substring(0,2));\r\n      } else if(month == 'Apr') {\r\n        monthNum = '05';\r\n        monthNumPrior = '03'\r\n        day = (selectedMovie.Released.substring(0,2));\r\n      } else if(month == 'May') {\r\n        monthNum = '06';\r\n        monthNumPrior = '04'\r\n        day = (selectedMovie.Released.substring(0,2));\r\n      } else if(month == 'Jun') {\r\n        monthNum = '07';\r\n        monthNumPrior = '05'\r\n        day = (selectedMovie.Released.substring(0,2));\r\n      } else if(month == 'Jul') {\r\n        monthNum = '08';\r\n        monthNumPrior = '06'\r\n        day = (selectedMovie.Released.substring(0,2));\r\n      } else if(month == 'Aug') {\r\n        monthNum = '09';\r\n        monthNumPrior = '07'\r\n        day = (selectedMovie.Released.substring(0,2));\r\n      } else if(month == 'Sep') {\r\n        monthNum = '10';\r\n        monthNumPrior = '08'\r\n        day = (selectedMovie.Released.substring(0,2));\r\n      } else if(month == 'Oct') {\r\n        monthNum = '11';\r\n        monthNumPrior = '09'\r\n        day = (selectedMovie.Released.substring(0,2));\r\n      } else if(month == 'Nov') {\r\n        monthNum = '12';\r\n        monthNumPrior = '10'\r\n        day = (selectedMovie.Released.substring(0,2));\r\n      } else if(month == 'Dec') {\r\n        monthNum = '01';\r\n        monthNumPrior = '11'\r\n        day = (selectedMovie.Released.substring(0,2));\r\n        year = parseInt(year)+1;\r\n      } else {\r\n        year = year++;\r\n      }\r\n\r\n      let priorDate = yearPrior + '-' + monthNumPrior + '-' + day\r\n      let laterDate =  year + '-' + monthNum + \"-\" + day\r\n\r\n      \r\n\r\n\r\n\r\n      try {\r\n          let search_result = await axios({\r\n            url:      `https://api.nytimes.com/svc/movies/v2/reviews/search.json?opening-date=${priorDate}:${laterDate}&api-key=eiol1fy9uW3jyANb4ZtUlai96rau5OGb`,\r\n            method:   'get',\r\n            params: {\r\n              query: selectedMovie.Title,\r\n            }\r\n          })\r\n          setCurrentReviewURL(search_result.data.results[0].link.url)\r\n          setCurrentReviewSuggestedText('Suggested NYTimes Review ' + JSON.stringify(search_result.data.results[0].link.suggested_link_text))\r\n          \r\n          \r\n      } catch {\r\n          setCurrentReviewURL('')\r\n          setCurrentReviewSuggestedText('No Suggested Articles Available')\r\n      }\r\n\r\n    }\r\n\r\n\r\n    \r\n    let i = 0;\r\n    return (\r\n      <div className={'CurrentCard'+colorTheme}>\r\n        <div className={'CardBar'+colorTheme}>\r\n          <div className={'ImmediateInfoOuter'+colorTheme}>\r\n            <div className=\"ImmediateInfo\">\r\n              <img className='Image' src={selectedMovie.Poster} alt = {'Poster for ' + selectedMovie} width={160}></img>\r\n              <div className={'Details'+colorTheme}>\r\n                <p className='Title'>{selectedMovie.Title}</p>\r\n                <p className='Year'>({selectedMovie.Year})</p>\r\n                <p>Starring:</p> \r\n                <div>\r\n                  {selectedMovie.Actors.split(\",\").map(name=><p key={i++} className='Name'>{name}</p>)}\r\n                </div>\r\n                <p className='Name'>Directed by {selectedMovie.Director}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={'MoreDetailsDiv'+colorTheme}>\r\n        <div className={'MoreDetails'+colorTheme}>\r\n          <div className='Logistics'>\r\n            <div className='LogisticsData'>\r\n              <h3>Runtime</h3>\r\n              <p>{selectedMovie.Runtime}</p>\r\n            </div>\r\n            <div className='LogisticsData'>\r\n              <h3>Rated</h3>\r\n              <p>{selectedMovie.Rated}</p>\r\n            </div>\r\n            <div className='LogisticsData'>\r\n              <h3>Genre</h3>\r\n              <p>{selectedMovie.Genre}</p>\r\n            </div>\r\n          </div>\r\n          <div className='Synopsis'>\r\n            <h3>Synopsis</h3>\r\n            <p>{selectedMovie.Plot}</p>\r\n          </div>\r\n          <button className = 'ReviewButton' onClick={(selectedMovie)=>{SearchReviews()}}>Check for NYTimes Movie Reviews!</button>\r\n          <div className='ReviewLink'><p>Note: This feature works best for recent and/or culturally significant movies (i.e. The Godfather, Star Wars Ep. VII, Godzilla v. Kong)</p><a href={currentReviewURL} target=\"_blank\">{currentReviewSuggestedText}</a></div>\r\n          <button className='BacklogButton' onClick={()=>{addToWatchList(selectedMovie)}}>Add to WatchList!</button>\r\n          <button className='WatchedButton' onClick={()=>{alreadySeen(selectedMovie)}}>Already Seen It!</button>\r\n          <button className='Hide' onClick={()=>{setSelectedMovie('')}}>Hide</button>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className={'SearchPromptDiv'+colorTheme}><div className='Center'>Search to get Started!</div></div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction AutoCompleteSuggestions({movieSearcherCurrentResults, setMovieSearcherCurrentResults, selectedMovie, setSelectedMovie, setCurrentReviewURL, setCurrentReviewSuggestedText}) {\r\n  \r\n    let autoCompleteResultsList;\r\n    if(movieSearcherCurrentResults === '') {\r\n      autoCompleteResultsList = (\r\n        <p>No Results Yet!</p>\r\n      )\r\n    } else {\r\n      async function selectAutoComplete(movie) {\r\n        let selectedMovieMoreInfo = await axios({\r\n            url:      `https://www.omdbapi.com/?&apikey=fb8a95d8&t=${movie.Title}&type=movie&plot=full`,\r\n            method:   'get',\r\n          })\r\n\r\n        setSelectedMovie(selectedMovieMoreInfo.data);\r\n        setCurrentReviewURL('');\r\n        setCurrentReviewSuggestedText('');\r\n        setMovieSearcherCurrentResults([]);\r\n      }\r\n      \r\n      autoCompleteResultsList = (\r\n        <div className='AutoCompleteSuggestions'>\r\n          {movieSearcherCurrentResults.map(mscr => <button className=\"AutoCompleteResult\" key={mscr.imdbID} onClick={()=>{selectAutoComplete(mscr)}}>{mscr.Title} - ({mscr.Year})</button>)}\r\n        </div>\r\n      ) \r\n    }\r\n  \r\n    return autoCompleteResultsList\r\n}\r\n\r\nexport default MovieSearcher;\r\n","import React from 'react';\r\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\r\n\r\nconst MapContainer = ({latLong, setLatLong})=>{\r\n    if(latLong!= ''){\r\n\r\n\r\n        \r\n    }\r\n\r\n    \r\n    const defaultCenter = latLong;\r\n\r\n    const mapStyles = {        \r\n        height: \"75%\",\r\n        width: \"75%\",\r\n        display: 'inline-block',\r\n        position: 'relavtive'\r\n    };\r\n        \r\n    \r\n    setLatLong('');\r\n\r\n\r\n \r\n    return (\r\n        <LoadScript googleMapsApiKey='AIzaSyAkB7B1ttQoSCSN3fKnhamljAxxaO49i4I'>\r\n            <GoogleMap mapContainerStyle={mapStyles}\r\n            zoom={15}\r\n            center={defaultCenter}/>\r\n        </LoadScript>\r\n    )\r\n}\r\n\r\nexport default MapContainer;","import './App.css';\r\nimport axios from 'axios';\r\nimport React, {useState} from 'react'\r\nimport MapContainer from './MapContainer.js'\r\n\r\nfunction LocalSearcher({setSelectedMovie, colorTheme, setPageOpen, setmsOpen, setmlOpen, setlsOpen}) {\r\n    const [localResults, setLocalResults] = useState('');\r\n    const [localZip, setLocalZip] = useState('');\r\n    const [localRange, setLocalRange] = useState('');\r\n    const [theaterZip, setTheaterZip] = useState('');\r\n    const [latLong, setLatLong] = useState('');\r\n    const [formatted_address, setFormattedAddress] = useState('');\r\n\r\n    async function searchLocally({zip, range}) {\r\n        let key = 'dvv6x2m364c35wsxqx595a3p';\r\n        let date = new Date();\r\n        let today = date.getFullYear() + '-' + (date.getMonth()+1) + '-' + date.getDate()\r\n\r\n        let local_result = await axios({\r\n            url: `https://data.tmsapi.com/v1.1/movies/showings?startDate=${today}&zip=${localZip}&radius=${localRange}&api_key=dvv6x2m364c35wsxqx595a3p`\r\n        });\r\n\r\n        await setLocalResults(local_result.data);\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className={'LocalExterior'+colorTheme}>\r\n\r\n        <div className ={'LocalSearcher'+colorTheme}>\r\n\r\n            <div className={'LocalSearcherConsole'+colorTheme}>\r\n                <p>Local Searcher</p>\r\n                    <input type=\"text\" pattern={\"[0-9]{5}\"} placeholder='Enter Zip' onInput={ async (e)=>{\r\n                        let zip = e.target.value\r\n                        await setLocalZip(zip);\r\n\r\n\r\n                    }}></input>\r\n\r\n                    <input type=\"number\" min={5} max={100} placeholder={'Enter Range'} onInput={ async (e)=>{\r\n                        let range = e.target.value\r\n                        setLocalRange(range);\r\n                        \r\n                    }}></input>\r\n\r\n                <button onClick={(e)=>{searchLocally(localZip, localRange)}}>Search</button>\r\n            </div>\r\n            \r\n        <LocalSearcherResults localResults={localResults} setSelectedMovie={setSelectedMovie} colorTheme={colorTheme}  theaterZip={theaterZip} setTheaterZip={setTheaterZip} localZip={localZip} setFormattedAddress={setFormattedAddress} setLatLong={setLatLong} setPageOpen={setPageOpen} setmsOpen={setmsOpen} setmlOpen={setmlOpen} setlsOpen={setlsOpen}/>\r\n        <div className='AddressMap'>\r\n            <div className={'Address'}>\r\n                <h4>Theater Address</h4>\r\n                <p>{formatted_address}</p>\r\n            </div>\r\n            <MapContainer latLong={latLong} setLatLong={setLatLong}/>\r\n\r\n        </div>\r\n        </div>\r\n        \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction LocalSearcherResults({localResults, setSelectedMovie, colorTheme, theaterZip, setTheaterZip, localZip, setFormattedAddress, setLatLong, setPageOpen, setmsOpen, setmlOpen, setlsOpen}) {\r\n    let localSearcherResultsList;\r\n\r\n    if(localResults === '') {\r\n        localSearcherResultsList = (\r\n        <p>No Results Yet!</p>\r\n      )\r\n    } else {    \r\n        localSearcherResultsList = (\r\n        <div>\r\n          {localResults.map(\r\n              (local_movie) =>{ \r\n                return (\r\n                    <div className={\"LocalSearcherMovie\"+colorTheme} key={local_movie.tmsId}>\r\n                        <LocalMovieShowings local_movie={local_movie} setSelectedMovie={setSelectedMovie} colorTheme={colorTheme} theaterZip={theaterZip} setTheaterZip={setTheaterZip} localZip={localZip} setFormattedAddress={setFormattedAddress} setLatLong={setLatLong} setPageOpen={setPageOpen} setmsOpen={setmsOpen} setmlOpen={setmlOpen} setlsOpen={setlsOpen}/>\r\n                    </div>\r\n                )\r\n                \r\n          }\r\n        )\r\n    \r\n        }\r\n\r\n    \r\n        \r\n        \r\n\r\n        </div>\r\n      ) \r\n    }\r\n  \r\n    return localSearcherResultsList\r\n}\r\n\r\nfunction LocalMovieShowings({local_movie, setSelectedMovie, colorTheme, theaterZip, setTheaterZip, localZip, setFormattedAddress, setLatLong,  setPageOpen, setmsOpen, setmlOpen, setlsOpen}) {\r\n \r\n    async function getMoreDetails(movieTitle) {\r\n        let selectedMovieMoreInfo = await axios({\r\n            url:      `https://www.omdbapi.com/?&apikey=fb8a95d8&t=${movieTitle}&type=movie&plot=full`,\r\n            method:   'get',\r\n          })\r\n    \r\n        setSelectedMovie(selectedMovieMoreInfo.data);\r\n\r\n        \r\n      \r\n    }\r\n\r\n    \r\n    async function getLatLong(tz) {\r\n        if(tz!=''){\r\n            let mapsGeo = await axios({\r\n                url:      `https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyAkB7B1ttQoSCSN3fKnhamljAxxaO49i4I`,\r\n                method:   'get',\r\n                params: {\r\n                address: `${tz}`\r\n                }\r\n              })\r\n              try {\r\n                  setFormattedAddress(JSON.stringify(mapsGeo.data.results[0].formatted_address))\r\n                  setLatLong(mapsGeo.data.results[0].geometry.location)\r\n                \r\n              } catch {\r\n                await setFormattedAddress('No Address Available')\r\n    \r\n              }\r\n        }\r\n        \r\n\r\n      \r\n    }\r\n\r\n    const [currentURL, setCurrentURL] = useState('');\r\n    \r\n    \r\n    let local_showings = (\r\n \r\n        \r\n        <div className={'LocalMovie'+colorTheme}>\r\n            <a href={local_movie.officialUrl} className={'LocalTitle'+colorTheme} target=\"_blank\">{local_movie.title}</a>\r\n            <p>{local_movie.shortDescription}</p>\r\n            <select onChange={(e)=>{\r\n\r\n                var index = e.nativeEvent.target.selectedIndex;\r\n                setTimeout(()=>{\r\n                    setTheaterZip(e.nativeEvent.target[index].dataset.location + ' ' + localZip)\r\n                    setCurrentURL(e.target[index].dataset.url)\r\n                }, 150)\r\n\r\n\r\n            }}>     \r\n                <option disabled selected value> Choose a Showtime </option>\r\n\r\n                {local_movie.showtimes.map(showtime => {\r\n                    return (\r\n                        <option className='MovieShowing' data-url={showtime.ticketURI} data-location={showtime.theatre.name} key={showtime.ticketURI+showtime.theatre.id+showtime.dateTime}>{showtime.theatre.name} at {showtime.dateTime}</option>)}\r\n                    )\r\n                    }\r\n                    \r\n                    </select>\r\n                <button onClick={()=>{ \r\n                    if(currentURL != '') {\r\n                        window.open(\r\n                            currentURL,\r\n                            '_blank'\r\n                          );\r\n                    }\r\n                }\r\n                }>Purchase Tickets</button>\r\n                <button onClick={()=>{\r\n                    if(theaterZip.length > 8)\r\n                    getLatLong(theaterZip)\r\n                }\r\n                \r\n                }>Get Address</button>\r\n            <button onClick={()=>{\r\n                getMoreDetails(local_movie.title)\r\n                setPageOpen('ms'); \r\n                setmsOpen(true); \r\n                setmlOpen(false); \r\n                setlsOpen(false)\r\n            }\r\n            \r\n            }>View More Movie Details</button>\r\n        </div>\r\n    )\r\n\r\n    return local_showings\r\n}\r\n\r\nexport default LocalSearcher;","import './App.css';\nimport { useState, useEffect } from 'react';\n\nimport firebase from \"./firebase\"\n\nimport SignupForm from './SignupForm'\nimport SigninForm from './SigninForm'\nimport LogoutButton from './LogoutButton'\n\nimport Watchlist from './Watchlist'\nimport WatchedList from './WatchedList'\n\nimport MovieSearcher from './MovieSearcher.js'\nimport LocalSearcher from './LocalSearcher.js'\n\n\n\n// Make a useContext hook (figure it out) to keep the firebase in one file and the currentUser being global\n// Omdb api                                           20pts\n// tms api                                            20pts\n// backend with user accounts and login for firebase  15pts\n// autocomplete                                       10\n// custom color theming tied to the user              5\n// Frontend in a javascript absed framework - react   10\n// Times API                                          5\n// Geocode API                                        5\n// Total so far                                       90\n// Regular Maps JS API is extra 5 pts\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [movieSearcherCurrentResults, setMovieSearcherCurrentResults] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState('');\n  const [updatingWatchlistFlag, setUpdatingWatchlistFlag] = useState(false);\n  const [updatingWatchedFlag, setUpdatingWatchedFlag] = useState(false);\n  const [colorTheme, setColorTheme] = useState('light');\n  const [pageOpen, setPageOpen] = useState('ms');\n  const [msOpen, setmsOpen] = useState(true);\n  const [mlOpen, setmlOpen] = useState(false);\n  const [lsOpen, setlsOpen] = useState(false);\n\n\n\n\n\n  const updateUser = function(authUser) {\n    if(authUser) {\n      setCurrentUser(authUser.uid)\n      setSelectedMovie('')\n      setPageOpen('ms')\n      setmsOpen(true);\n      setmlOpen(false);\n      setlsOpen(false);\n\n    } else {\n      setCurrentUser(null)\n    }\n  }\n\n\n  useEffect(()=>{\n    if (firebase) {\n      firebase.auth().onAuthStateChanged((authUser)=>{updateUser(authUser)})\n     }\n  }, [])\n\n\n  if(firebase.auth().currentUser) {\n    \n    \n    return (\n      \n      <div className={'App'}>\n\n        <header className={'AppHeader'}>\n          <h1>CineSpire</h1>\n          <button className='ThemePicker' onClick={\n            async ()=>{\n              if(colorTheme == 'light'){\n                setColorTheme('dark')\n                await firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).update({theme: 'dark'});\n\n              } else {\n                setColorTheme('light')\n                await firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).update({theme: 'light'});\n\n              }\n            } \n       }>{colorTheme}</button>\n\n        <LogoutButton setCurrentUser={setCurrentUser} setColorTheme={setColorTheme}/>\n          \n        </header>\n        <div className='PageSelector'>\n          <button className={'selected'+msOpen} onClick={()=>{setPageOpen('ms'); setmsOpen(true); setmlOpen(false); setlsOpen(false)}}>Search Movies By Title</button>\n          <button className={'selected'+mlOpen} onClick={()=>{setPageOpen('ml'); setmsOpen(false); setmlOpen(true); setlsOpen(false)}}>My Lists</button>\n          <button className={'selected'+lsOpen} onClick={()=>{setPageOpen('ls'); setmsOpen(false); setmlOpen(false); setlsOpen(true)}}>Search for local movies</button>\n        </div>\n        <MainSection pageOpen={pageOpen} movieSearcherCurrentResults={movieSearcherCurrentResults} setMovieSearcherCurrentResults={setMovieSearcherCurrentResults} selectedMovie={selectedMovie} setSelectedMovie={setSelectedMovie} currentUser={currentUser} setUpdatingWatchlistFlag={setUpdatingWatchlistFlag} setUpdatingWatchedFlag={setUpdatingWatchedFlag} colorTheme={colorTheme} updatingWatchlistFlag={updatingWatchlistFlag} updatingWatchedFlag={updatingWatchedFlag} setPageOpen={setPageOpen} setmsOpen={setmsOpen} setmlOpen={setmlOpen} setlsOpen={setlsOpen}/>\n       \n\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div className={'App'}>\n          <header className={'AppHeader'}>\n            <h1>CineSpire</h1>\n          </header>\n          <div className='SigninSignupExt'>\n            <div className='SignInSignUp'>\n              <SigninForm setCurrentUser={setCurrentUser} setColorTheme={setColorTheme} setPageOpen={setPageOpen} setmsOpen={setmsOpen} setmlOpen={setmlOpen} setlsOpen={setlsOpen}/>\n              <SignupForm setCurrentUser={setCurrentUser} setColorTheme={setColorTheme} setPageOpen={setPageOpen} setmsOpen={setmsOpen} setmlOpen={setmlOpen} setlsOpen={setlsOpen}/>\n            </div>\n             \n          </div>\n        </div>   \n      </div>\n    )\n  }\n}\n\nconst MainSection = ({pageOpen, movieSearcherCurrentResults, setMovieSearcherCurrentResults, selectedMovie, setSelectedMovie, currentUser, setUpdatingWatchlistFlag, setUpdatingWatchedFlag, colorTheme, updatingWatchlistFlag, updatingWatchedFlag, setPageOpen, setmsOpen, setmlOpen, setlsOpen}) => {\n  if(pageOpen == 'ms') {\n    return ( \n        <MovieSearcher movieSearcherCurrentResults={movieSearcherCurrentResults} setMovieSearcherCurrentResults={setMovieSearcherCurrentResults} selectedMovie={selectedMovie} setSelectedMovie={setSelectedMovie} currentUser={currentUser} setUpdatingWatchlistFlag={setUpdatingWatchlistFlag} setUpdatingWatchedFlag={setUpdatingWatchedFlag} colorTheme={colorTheme}/>\n    )\n  } else if(pageOpen == 'ml') {\n    return (\n      <div className={'Lists'+colorTheme}>\n        <Watchlist currentUser={currentUser} setUpdatingWatchlistFlag={setUpdatingWatchlistFlag} updatingWatchlistFlag={updatingWatchlistFlag} colorTheme={colorTheme} setSelectedMovie={setSelectedMovie} setPageOpen={setPageOpen} setmsOpen={setmsOpen} setmlOpen={setmlOpen} setlsOpen={setlsOpen}/>\n        <WatchedList currentUser={currentUser} setUpdatingWatchedFlag={setUpdatingWatchedFlag} updatingWatchedFlag={updatingWatchedFlag} colorTheme={colorTheme} setSelectedMovie={setSelectedMovie}  setPageOpen={setPageOpen} setmsOpen={setmsOpen} setmlOpen={setmlOpen} setlsOpen={setlsOpen}/>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <LocalSearcher setSelectedMovie={setSelectedMovie} colorTheme={colorTheme} setPageOpen={setPageOpen} setmsOpen={setmsOpen} setmlOpen={setmlOpen} setlsOpen={setlsOpen}/>\n\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}